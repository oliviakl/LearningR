---
title: "Reproducible documents"
author: "Olivia Klatt"
format: html
---

- Olivia KLatt
- SciLifeLab

Use 'render' to create document here its html

# Intro
This is the **Introduction** *section*.

# Methods and Results 
## Analysis
This is the **Analysis** under *Methods* and Results

# Discussion
This is the **Discussion** *part*

```{r}
2 + 2
```


```{r setup}
#| include: false
library(tidyverse)
nhanes_small <- read_csv(here::here("data/nhanes_small.csv"))
```

## Table of results

```{r mean-age-bmi-table}
#| echo: false
#| warning: false
#| message: false
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  group_by(
    diabetes,
    education
  ) %>%
  summarize(
    max_bmi = max(bmi,
      na.rm = TRUE
    ),
    min_bmi = min(bmi,
      na.rm = TRUE
    )
  ) %>%
  ungroup() %>%
  knitr::kable(caption = "Mean values of Age and BMI for each diabetes and education status")
```


to put in code use code chunk, can always only have 1 r setup so you dont need to reload packages all the time, hashtag means header so dotn use for comments


```{r}
2 + 2
```

## Prettier table
```{r prettier-table}
#| echo: false
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  mutate(
    # Task 2a.
    mean_age = round(mean_age, digits = 1),
    mean_bmi = round(mean_bmi, digits = 1),
    # Task 2b.
    education = str_to_sentence(education)
  ) %>%
  rename(
    # Task 3.
    "Diabetes Status" = diabetes,
    "Education" = education,
    "Mean Age" = mean_age,
    "Mean BMI" = mean_bmi
  ) %>%
  knitr::kable(caption = "Mean values of Age and BMI for each education and diabetes status.")
```

## Inserting images
![Cute kitten](images/Kitten.png){#fig-cat}

Cute kitten in @fig-cat

under help you can find Markdown to help you with it
always reload the libraries when you restart R, check if in correct project 
always put all your libraries in the top (under r setup) so you know where they are and can easily reload them

## Visualizing data
### one varibale plot
To add layers in ggplot use + (similar to pipe) e.g histogram for one 
Which geom? : go to consule and type '?geom_historgram' or other and read it in documentation, also shows which setting we are able to change
If warning that we loose data use 'na.rm = TRUE'
```{r}
ggplot(nhanes_small, aes(x = bmi)) + 
    geom_histogram(na.rm = TRUE)

```
To only show bmi <= 60 use piping and filter and then plot
always one space after def in YAML 
use histogram for continious variable
:| fig-cap always under table
:| label important for crossreference
```{r}
#| fig-cap: "Distribution of BMI"
#| label: fig-bmi-histo
nhanes_small %>% 
    filter (bmi <= 60) %>% 
    ggplot(aes(x = bmi)) + 
    geom_histogram(na.rm = TRUE)
```
See @fig-bmi-histo

### Discrete variable 

```{r}
nhanes_small %>% 
    ggplot(aes(x = education)) +
    geom_bar()
```
for pipe type : command+ shift+ m
```{r}
nhanes_small %>% 
    filter(!is.na(diabetes)) %>% 
    ggplot(aes(x = diabetes)) +
    geom_bar()
```

To have two varibales just put them both in same code chunk

```{r}
#| label: fig-diabetes-education
#| fig-cap: "Counts of diabetes and education"
#| fig-subcap:
#|   - "Diabetes"
#|   - "Education"
#| layout-ncol: 2
nhanes_small %>% 
    filter(!is.na(diabetes)) %>% 
    ggplot(aes(x = diabetes)) +
    geom_bar()

nhanes_small %>% 
   filter(!is.na(education)) %>% 
    ggplot(aes(x = education)) +
    geom_bar()
```
Good cheatsheet for ggplot
na.rm = TRUE if you know you have a lot of missing values 
geom_smooth defines a smoothing line -> more info in console under ?geom_smooth
## Plotting two variables
### Plotting two continuous 
```{r}
nhanes_small %>% 
    ggplot(aes(x = bmi, y = bp_sys_ave)) + 
    geom_hex(na.rm = TRUE) +
    geom_smooth(na.rm = TRUE)
```

### Two discrete variables 
Two categorical/discrete varibales
If you dont want to show missing values filter it before in piping to make it better understandable for others
Use 'fill' for a second varibale e.g. education in relation to diabetes
use geom_bar (position = position_dodge()) to get the the different education things next to each other not on top of each other -> read the info about geom_bar
```{r}
nhanes_small %>% 
    filter(!is.na(education), !is.na(diabetes)) %>% 
    ggplot(aes(x = diabetes, fill = education)) + 
    geom_bar(position = position_dodge())
```


### Discrete and continious variables 
x-axis categorical variable
can add sereval geom together with + (basically add another plot on top)
```{r}
nhanes_small %>% 
    filter(!is.na(diabetes), bmi <= 60) %>% 
    ggplot(aes(x = diabetes, y = bmi)) + 
    geom_violin(na.rm = TRUE) +
    geom_boxplot(na.rm = TRUE)
```

## Exercise to make plots with one or two variables

```{r}
library(NHANES)
nhanes_exercise <- NHANES %>%
  rename_with(snakecase::to_snake_case) %>%
  rename(sex = gender)
```

```{r}
#| label: fig-age-diabetes_age
#| fig-cap: "Age at diabetes diagnosis and at collection"
#| fig-subcap: 
#|   - "Age at Colletction"
#|   - "Age of Diabetes Diagnosis"
#| layout-ncol: 2
# Distribution of age
ggplot(nhanes_exercise, aes(x = age)) +
    geom_density(na.rm = TRUE)

# Distribution of age at diabetes diagnosis
ggplot(nhanes_exercise, aes(x = diabetes_age)) +
    geom_density(na.rm = TRUE)
```

```{r}
#| label: fig-smokenow_above20
#| fig-cap: "Number of peole who smoke now and are above 20 years"
nhanes_exercise %>% 
  filter(age >= 20, !is.na(smoke_now)) %>% 
  ggplot(aes(x = smoke_now)) +
  geom_bar(na.rm = TRUE)
```

```{r}
# BMI in relation to mean arterial pressure
nhanes_exercise %>% 
  mutate(mean_arterial_pressure = (bp_sys_ave + (2 * bp_dia_ave)) / 3) %>% 
  ggplot(aes(x = bmi, y = mean_arterial_pressure)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth(na.rm = TRUE)
```

